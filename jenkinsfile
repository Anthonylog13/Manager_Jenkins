pipeline {
    agent any // Tu agente Windows

    environment {
        // No necesitamos credenciales AWS para esta prueba específica
        // Pero mantenemos las otras por si quieres volver al pipeline completo luego
        AWS_REGION         = 'us-east-2'
        ECR_PUBLIC_REGION  = 'us-east-1' 
        ECR_PUBLIC_ALIAS   = 'e5f4p9e5'
        BACKEND_DIR        = "AlfaByte_Xclone-"
        FRONTEND_DIR       = "Frontend"
        BACKEND_REPO_NAME  = 'alfabyte-xclone-backend'
        FRONTEND_REPO_NAME = 'alfabyte-xclone-frontend'
        EC2_IP             = '3.15.177.89'
        AWS_CREDS_ID       = 'aws-manageJenkins' 
        SSH_KEY_ID         = 'xclone-key-ssh' 
        JWT_SECRET_ID      = 'jwt-secret-id' 
        MONGO_PW_ID        = 'mongo-pw-id' 
    }

    stages {
        stage('Clonar Repositorio') { // Mantenemos un checkout
            steps {
                echo "==> Clonando repositorio..."
                checkout scm
            }
        }

        stage('Test Docker Login a Docker Hub') {
            steps {
                echo "==> Intentando login a Docker Hub usando PowerShell..."
                script {
                    // Credenciales de prueba para Docker Hub
                    // ¡CAMBIA ESTO POR UN USUARIO Y CONTRASEÑA DE PRUEBA O INVENTADOS!
                    def dockerHubUser = "usuariodeprueba12345"
                    def dockerHubPassword = "passworddeprueba12345" 
                    
                    def psLoginScript = """
                        Write-Output "Paso 1: Preparando para login a Docker Hub..."
                        Write-Output "Usuario: ${dockerHubUser}"
                        # No imprimas la contraseña real en logs, esto es solo un ejemplo
                        # Write-Output "Contraseña (simulada): ${dockerHubPassword}" 
                        
                        Write-Output "Paso 2: Intentando hacer login en Docker Hub..."
                        # Pasamos la contraseña a través de la tubería
                        "${dockerHubPassword}" | docker login --username "${dockerHubUser}" --password-stdin
                        
                        if (\$LASTEXITCODE -ne 0) {
                            Write-Error "Login a Docker Hub falló con código de salida: \$LASTEXITCODE"
                            # Intentamos mostrar más información si es un error de Docker
                            docker info
                            exit 1
                        }
                        Write-Output "Login a Docker Hub aparentemente completado (o falló la autenticación si las credenciales son incorrectas, pero el comando se ejecutó)."
                    """
                    
                    try {
                        powershell(script: psLoginScript)
                        echo "Stage de Test Docker Login completado." 
                    } catch (e) {
                        echo "EXCEPCIÓN al ejecutar PowerShell para login a Docker Hub: ${e.getMessage()}"
                        throw e
                    }
                }
            }
        }
        // Comenta los otros stages por ahora para esta prueba
        /* stage('Build & Push Backend') { ... }
        stage('Build & Push Frontend') { ... }
        stage('Desplegar en AWS EC2') { ... }
        */
    }

    post {
        success {
            echo "Pipeline de Test Docker Login ejecutado con éxito."
        }
        failure {
            echo "Falló el pipeline de Test Docker Login."
        }
    }
}